{"name": "test_login_courier_missing_fields[payload1-400]", "status": "failed", "statusDetails": {"message": "AssertionError: Ожидался статус код 400, но получен 504.\nassert 504 == 400\n +  where 504 = <Response [504]>.status_code", "trace": "payload = {'login': 'Artem'}, expected_status_code = 400\n\n    @pytest.mark.parametrize(\"payload, expected_status_code\", [\n        ({\"password\": \"test\"}, 400), #Код ответа выдает 400 или 504 вне зависимости от написанного кода. Я оставил ожидаемое значение 400 из докуентации к API по совету наставника\n        ({\"login\": \"Artem\"}, 400), #Код ответа выдает 400 или 504 вне зависимости от написанного кода. Я оставил ожидаемое значение 400 из докуентации к API по совету наставника\n        ({}, 400), #Код ответа выдает 400 или 504 вне зависимости от написанного кода. Я оставил ожидаемое значение 400 из докуентации к API по совету наставника\n    ])\n    def test_login_courier_missing_fields(payload, expected_status_code):\n        response = login_courier.send_login_request(payload)\n    \n>       assert response.status_code == expected_status_code, (\n            f\"Ожидался статус код {expected_status_code}, но получен {response.status_code}.\"\n        )\nE       AssertionError: Ожидался статус код 400, но получен 504.\nE       assert 504 == 400\nE        +  where 504 = <Response [504]>.status_code\n\napi_test\\tests\\test_login_courier.py:52: AssertionError"}, "parameters": [{"name": "payload", "value": "{'login': 'Artem'}"}, {"name": "expected_status_code", "value": "400"}], "start": 1730849779604, "stop": 1730849839649, "uuid": "74cfd3f0-b63c-4589-a434-b850bafce732", "historyId": "a521f85cc1d4aeaf2a8bd68e9f6d57ca", "testCaseId": "a3e90fb4b9432850c201a023dd09fc98", "fullName": "api_test.tests.test_login_courier#test_login_courier_missing_fields", "labels": [{"name": "parentSuite", "value": "api_test.tests"}, {"name": "suite", "value": "test_login_courier"}, {"name": "host", "value": "DESKTOP-BEKDSUT"}, {"name": "thread", "value": "19136-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "api_test.tests.test_login_courier"}]}